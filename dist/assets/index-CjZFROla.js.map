{"version":3,"file":"index-CjZFROla.js","sources":["../../src/js/modules/data.js","../../src/js/modules/dateUtils.js","../../src/js/modules/domUtils.js","../../src/js/modules/themeManager.js","../../src/js/modules/scheduleRenderer.js","../../src/js/modules/washingScheduleManager.js","../../src/js/app.js"],"sourcesContent":["/**\r\n * @fileoverview Dados da escala de limpeza e configurações da República Tabajara\r\n */\r\n\r\n/**\r\n * Dados da escala de limpeza da República Tabajara\r\n * Organizado por dia da semana com rotação de responsabilidades\r\n */\r\nexport const scheduleData = {\r\n  monday: [\r\n    {\r\n      cozinha: 'A. Viihtube',\r\n      banhBaixo: 'Bixo Gaga',\r\n      banhSuite: 'Bixo Alexa',\r\n      sala: 'I. Ivan',\r\n      lavabo: 'I. Ivan',\r\n    },\r\n    {\r\n      cozinha: 'I. Ivan',\r\n      banhBaixo: 'A. Viihtube',\r\n      banhSuite: 'Bixo Gaga',\r\n      sala: 'Bixo Alexa',\r\n      lavabo: 'Bixo Alexa',\r\n    },\r\n    {\r\n      cozinha: 'Bixo Alexa',\r\n      banhBaixo: 'I. Ivan',\r\n      banhSuite: 'A. Viihtube',\r\n      sala: 'Bixo Gaga',\r\n      lavabo: 'Bixo Gaga',\r\n    },\r\n    {\r\n      cozinha: 'Bixo Gaga',\r\n      banhBaixo: 'Bixo Alexa',\r\n      banhSuite: 'I. Ivan',\r\n      sala: 'A. Viihtube',\r\n      lavabo: 'A. Viihtube',\r\n    },\r\n  ],\r\n  wednesday: [\r\n    {\r\n      cozinha: 'Rita',\r\n      banhBaixo: 'LATAM',\r\n      banhSuite: 'TPM',\r\n      sala: 'Smigou',\r\n      lavabo: 'Smigou',\r\n    },\r\n    { \r\n      cozinha: 'Smigou', \r\n      banhBaixo: 'Rita', \r\n      banhSuite: 'LATAM', \r\n      sala: 'TPM', \r\n      lavabo: 'TPM' \r\n    },\r\n    {\r\n      cozinha: 'TPM',\r\n      banhBaixo: 'Smigou',\r\n      banhSuite: 'Rita',\r\n      sala: 'LATAM',\r\n      lavabo: 'LATAM',\r\n    },\r\n    {\r\n      cozinha: 'LATAM',\r\n      banhBaixo: 'TPM',\r\n      banhSuite: 'Smigou',\r\n      sala: 'Rita',\r\n      lavabo: 'Rita',\r\n    },\r\n  ],\r\n  friday: [\r\n    {\r\n      cozinha: 'BBB',\r\n      banhBaixo: 'Leidi',\r\n      banhSuite: 'Madre',\r\n      sala: 'Espalha',\r\n      lavabo: 'Navala',\r\n    },\r\n    {\r\n      cozinha: 'Navala',\r\n      banhBaixo: 'BBB',\r\n      banhSuite: 'Leidi',\r\n      sala: 'Madre',\r\n      lavabo: 'Espalha',\r\n    },\r\n    {\r\n      cozinha: 'Espalha',\r\n      banhBaixo: 'Navala',\r\n      banhSuite: 'BBB',\r\n      sala: 'Leidi',\r\n      lavabo: 'Madre',\r\n    },\r\n    {\r\n      cozinha: 'Madre',\r\n      banhBaixo: 'Espalha',\r\n      banhSuite: 'Navala',\r\n      sala: 'BBB',\r\n      lavabo: 'Leidi',\r\n    },\r\n    {\r\n      cozinha: 'Leidi',\r\n      banhBaixo: 'Madre',\r\n      banhSuite: 'Espalha',\r\n      sala: 'Navala',\r\n      lavabo: 'BBB',\r\n    },\r\n  ],\r\n};\r\n\r\n/**\r\n * Definição dos cômodos com seus labels e chaves correspondentes\r\n */\r\nexport const rooms = [\r\n  { label: '🍽️ Cozinha', key: 'cozinha' },\r\n  { label: '🚿 Banheiro de baixo', key: 'banhBaixo' },\r\n  { label: '🛁 Banheiro suíte', key: 'banhSuite' },\r\n  { label: '🛋️ Sala e corredor', key: 'sala' },\r\n  { label: '🚽 Lavabo', key: 'lavabo' },\r\n];\r\n\r\n/**\r\n * Dados da escala da máquina de lavar por dia da semana\r\n */\r\nexport const washingSchedule = [\r\n  { day: 'Domingo', users: 'Espalha Lixo e B. Rita', dayIndex: 0 },\r\n  { day: 'Segunda-feira', users: 'B. Gaga e B. Alexa', dayIndex: 1 },\r\n  { day: 'Terça-feira', users: 'Latam, TPM e A. Viihtube', dayIndex: 2 },\r\n  { day: 'Quarta-feira', users: 'Madre e Navala', dayIndex: 3 },\r\n  { day: 'Quinta-feira', users: 'BBB e B. Smigou', dayIndex: 4 },\r\n  { day: 'Sexta-feira', users: 'Leidi e B. Total', dayIndex: 5 },\r\n  { day: 'Sábado', users: 'I. Ivan', dayIndex: 6 },\r\n];\r\n\r\n/**\r\n * Configurações da aplicação\r\n */\r\nexport const appConfig = {\r\n  /** Data de referência para o início do ciclo (Segunda-feira, 24 de fevereiro de 2020) */\r\n  referenceDate: new Date(2020, 1, 24),\r\n  /** Chave para salvar preferência de tema no localStorage */\r\n  themeStorageKey: 'escalas-tabajara-theme',\r\n  /** Classe CSS para modo escuro */\r\n  darkModeClass: 'dark-mode',\r\n};\r\n\r\n/**\r\n * Configuração de temas\r\n */\r\nexport const themeConfig = {\r\n  lightIcon: '☀️',\r\n  darkIcon: '🌙',\r\n  lightLabel: 'Alternar para modo escuro',\r\n  darkLabel: 'Alternar para modo claro',\r\n};\r\n","/**\r\n * @fileoverview Utilitários para manipulação de datas e cálculos de escala\r\n */\r\n\r\n/**\r\n * Formata uma data no formato DD/MM para exibição\r\n * @param {Date} date - Data a ser formatada\r\n * @returns {string} Data formatada no padrão brasileiro\r\n * @throws {Error} Se a data for inválida\r\n */\r\nexport const formatDate = (date) => {\r\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\r\n    throw new Error('Data inválida fornecida para formatação');\r\n  }\r\n  \r\n  return date.toLocaleDateString('pt-BR', { \r\n    day: '2-digit', \r\n    month: '2-digit' \r\n  });\r\n};\r\n\r\n/**\r\n * Calcula a diferença de semanas completas entre duas datas\r\n * @param {Date} date1 - Data mais recente\r\n * @param {Date} date2 - Data de referência\r\n * @returns {number} Número de semanas de diferença\r\n * @throws {Error} Se alguma das datas for inválida\r\n */\r\nexport const getWeekDifference = (date1, date2) => {\r\n  if (!(date1 instanceof Date) || isNaN(date1.getTime()) ||\r\n      !(date2 instanceof Date) || isNaN(date2.getTime())) {\r\n    throw new Error('Datas inválidas fornecidas para cálculo de diferença');\r\n  }\r\n\r\n  const msPerWeek = 1000 * 60 * 60 * 24 * 7;\r\n  const startOfDate1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\r\n  const startOfDate2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\r\n  \r\n  return Math.floor((startOfDate1 - startOfDate2) / msPerWeek);\r\n};\r\n\r\n/**\r\n * Encontra a data da segunda-feira da semana de uma data específica\r\n * @param {Date} date - Data de referência\r\n * @returns {Date} Data da segunda-feira da mesma semana\r\n * @throws {Error} Se a data for inválida\r\n */\r\nexport const getMondayDate = (date) => {\r\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\r\n    throw new Error('Data inválida fornecida para encontrar segunda-feira');\r\n  }\r\n\r\n  const currentDay = date.getDay();\r\n  const diffToMonday = (currentDay === 0 ? -6 : 1 - currentDay);\r\n  const mondayDate = new Date(date);\r\n  \r\n  mondayDate.setDate(date.getDate() + diffToMonday);\r\n  mondayDate.setHours(0, 0, 0, 0);\r\n  \r\n  return mondayDate;\r\n};\r\n\r\n/**\r\n * Calcula as datas e índices dos ciclos para uma semana específica\r\n * @param {Date} currentDate - Data atual para cálculo\r\n * @param {Date} referenceDate - Data de referência do sistema\r\n * @param {Object} scheduleData - Dados da escala\r\n * @returns {Object} Objeto com datas e índices calculados\r\n */\r\nexport const calculateWeekCycles = (currentDate, referenceDate, scheduleData) => {\r\n  if (!(currentDate instanceof Date) || isNaN(currentDate.getTime()) ||\r\n      !(referenceDate instanceof Date) || isNaN(referenceDate.getTime())) {\r\n    throw new Error('Datas inválidas fornecidas para cálculo de ciclos');\r\n  }\r\n\r\n  let referenceDate2 = new Date(currentDate);\r\n  \r\n  // Se for domingo, usar a próxima segunda-feira\r\n  if (currentDate.getDay() === 0) {\r\n    referenceDate2.setDate(currentDate.getDate() + 1);\r\n  }\r\n  \r\n  const mondayDate = getMondayDate(referenceDate2);\r\n  const weekDiff = Math.max(0, getWeekDifference(mondayDate, referenceDate));\r\n  \r\n  // Calcula os índices dos ciclos para cada dia\r\n  const mondayCycleIndex = weekDiff % (scheduleData.monday?.length || 1);\r\n  const wednesdayCycleIndex = weekDiff % (scheduleData.wednesday?.length || 1);\r\n  const fridayCycleIndex = weekDiff % (scheduleData.friday?.length || 1);\r\n  \r\n  // Calcula as datas da quarta e sexta\r\n  const wednesdayDate = new Date(mondayDate);\r\n  wednesdayDate.setDate(mondayDate.getDate() + 2);\r\n  \r\n  const fridayDate = new Date(mondayDate);\r\n  fridayDate.setDate(mondayDate.getDate() + 4);\r\n  \r\n  return {\r\n    mondayDate,\r\n    wednesdayDate,\r\n    fridayDate,\r\n    mondayCycleIndex,\r\n    wednesdayCycleIndex,\r\n    fridayCycleIndex\r\n  };\r\n};\r\n\r\n/**\r\n * Verifica se uma data é hoje\r\n * @param {Date} date - Data a ser verificada\r\n * @returns {boolean} True se a data for hoje\r\n */\r\nexport const isToday = (date) => {\r\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\r\n    return false;\r\n  }\r\n  \r\n  const today = new Date();\r\n  return date.getDate() === today.getDate() &&\r\n         date.getMonth() === today.getMonth() &&\r\n         date.getFullYear() === today.getFullYear();\r\n};\r\n\r\n/**\r\n * Obtém o nome do dia da semana em português\r\n * @param {number} dayIndex - Índice do dia (0 = domingo)\r\n * @returns {string} Nome do dia da semana\r\n */\r\nexport const getDayName = (dayIndex) => {\r\n  const days = [\r\n    'Domingo', 'Segunda-feira', 'Terça-feira', 'Quarta-feira',\r\n    'Quinta-feira', 'Sexta-feira', 'Sábado'\r\n  ];\r\n  \r\n  return days[dayIndex] || 'Dia inválido';\r\n};\r\n\r\n/**\r\n * Valida se uma data está dentro de um intervalo razoável\r\n * @param {Date} date - Data a ser validada\r\n * @param {number} yearsRange - Range de anos permitido (padrão: 10)\r\n * @returns {boolean} True se a data for válida\r\n */\r\nexport const isValidDateRange = (date, yearsRange = 10) => {\r\n  if (!(date instanceof Date) || isNaN(date.getTime())) {\r\n    return false;\r\n  }\r\n  \r\n  const currentYear = new Date().getFullYear();\r\n  const dateYear = date.getFullYear();\r\n  \r\n  return Math.abs(dateYear - currentYear) <= yearsRange;\r\n};\r\n","/**\r\n * @fileoverview Gerenciamento de DOM e cache de elementos\r\n */\r\n\r\n/**\r\n * Cache de seletores DOM para otimizar performance\r\n * Evita consultas repetitivas ao DOM\r\n */\r\nexport class DOMCache {\r\n  constructor() {\r\n    this.cache = new Map();\r\n    this.initializeCache();\r\n  }\r\n\r\n  /**\r\n   * Inicializa o cache com os elementos principais\r\n   * @private\r\n   */\r\n  initializeCache() {\r\n    const selectors = {\r\n      scheduleContainer: '#cleaningSchedule',\r\n      washingTableBody: '.washing-schedule table tbody',\r\n      themeToggle: '#themeToggle',\r\n      themeIcon: '#themeIcon',\r\n      footerYear: '#currentYear'\r\n    };\r\n\r\n    for (const [key, selector] of Object.entries(selectors)) {\r\n      this.cache.set(key, document.querySelector(selector));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Obtém um elemento do cache\r\n   * @param {string} key - Chave do elemento\r\n   * @returns {HTMLElement|null} Elemento do DOM ou null se não encontrado\r\n   */\r\n  get(key) {\r\n    return this.cache.get(key);\r\n  }\r\n\r\n  /**\r\n   * Adiciona um elemento ao cache\r\n   * @param {string} key - Chave para identificar o elemento\r\n   * @param {HTMLElement} element - Elemento do DOM\r\n   */\r\n  set(key, element) {\r\n    this.cache.set(key, element);\r\n  }\r\n\r\n  /**\r\n   * Verifica se todos os elementos essenciais estão disponíveis\r\n   * @returns {boolean} True se todos os elementos essenciais existem\r\n   */\r\n  validateEssentialElements() {\r\n    const essential = ['scheduleContainer', 'themeToggle', 'themeIcon'];\r\n    return essential.every(key => this.get(key) !== null);\r\n  }\r\n\r\n  /**\r\n   * Limpa o cache e reinicializa\r\n   */\r\n  refresh() {\r\n    this.cache.clear();\r\n    this.initializeCache();\r\n  }\r\n}\r\n\r\n/**\r\n * Utilitários para manipulação do DOM\r\n */\r\nexport class DOMUtils {\r\n  /**\r\n   * Cria um elemento com classes e atributos\r\n   * @param {string} tag - Tag do elemento\r\n   * @param {Object} options - Opções do elemento\r\n   * @param {string[]} options.classes - Classes CSS\r\n   * @param {Object} options.attributes - Atributos do elemento\r\n   * @param {string} options.textContent - Conteúdo de texto\r\n   * @param {string} options.innerHTML - Conteúdo HTML\r\n   * @returns {HTMLElement} Elemento criado\r\n   */\r\n  static createElement(tag, options = {}) {\r\n    const element = document.createElement(tag);\r\n    \r\n    if (options.classes) {\r\n      element.classList.add(...options.classes);\r\n    }\r\n    \r\n    if (options.attributes) {\r\n      for (const [key, value] of Object.entries(options.attributes)) {\r\n        element.setAttribute(key, value);\r\n      }\r\n    }\r\n    \r\n    if (options.textContent) {\r\n      element.textContent = options.textContent;\r\n    }\r\n    \r\n    if (options.innerHTML) {\r\n      element.innerHTML = options.innerHTML;\r\n    }\r\n    \r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Remove todos os filhos de um elemento\r\n   * @param {HTMLElement} element - Elemento pai\r\n   */\r\n  static clearElement(element) {\r\n    if (element) {\r\n      while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adiciona classe com verificação de existência do elemento\r\n   * @param {HTMLElement|null} element - Elemento do DOM\r\n   * @param {string} className - Nome da classe\r\n   */\r\n  static safeAddClass(element, className) {\r\n    if (element && typeof element.classList !== 'undefined') {\r\n      element.classList.add(className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove classe com verificação de existência do elemento\r\n   * @param {HTMLElement|null} element - Elemento do DOM\r\n   * @param {string} className - Nome da classe\r\n   */\r\n  static safeRemoveClass(element, className) {\r\n    if (element && typeof element.classList !== 'undefined') {\r\n      element.classList.remove(className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Verifica se um elemento tem uma classe específica\r\n   * @param {HTMLElement|null} element - Elemento do DOM\r\n   * @param {string} className - Nome da classe\r\n   * @returns {boolean} True se o elemento tem a classe\r\n   */\r\n  static hasClass(element, className) {\r\n    return element && element.classList && element.classList.contains(className);\r\n  }\r\n\r\n  /**\r\n   * Define atributo com verificação de existência do elemento\r\n   * @param {HTMLElement|null} element - Elemento do DOM\r\n   * @param {string} attribute - Nome do atributo\r\n   * @param {string} value - Valor do atributo\r\n   */\r\n  static safeSetAttribute(element, attribute, value) {\r\n    if (element && typeof element.setAttribute === 'function') {\r\n      element.setAttribute(attribute, value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Define texto com verificação de existência do elemento\r\n   * @param {HTMLElement|null} element - Elemento do DOM\r\n   * @param {string} text - Texto a ser definido\r\n   */\r\n  static safeSetText(element, text) {\r\n    if (element) {\r\n      element.textContent = text;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adiciona event listener com verificação de existência do elemento\r\n   * @param {HTMLElement|null} element - Elemento do DOM\r\n   * @param {string} event - Nome do evento\r\n   * @param {Function} handler - Função manipuladora do evento\r\n   * @param {Object} options - Opções do event listener\r\n   */\r\n  static safeAddEventListener(element, event, handler, options = {}) {\r\n    if (element && typeof element.addEventListener === 'function') {\r\n      element.addEventListener(event, handler, options);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @fileoverview Gerenciamento de temas claro/escuro com persistência\r\n */\r\n\r\nimport { themeConfig, appConfig } from './data.js';\r\nimport { DOMUtils } from './domUtils.js';\r\n\r\n/**\r\n * Gerenciador de temas da aplicação\r\n */\r\nexport class ThemeManager {\r\n  constructor(domCache) {\r\n    this.domCache = domCache;\r\n    this.isDarkMode = false;\r\n    this.mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\r\n    \r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Inicializa o gerenciador de temas\r\n   */\r\n  init() {\r\n    this.loadSavedTheme();\r\n    this.setupEventListeners();\r\n    this.setupMediaQueryListener();\r\n    this.applyTheme(this.isDarkMode);\r\n  }\r\n\r\n  /**\r\n   * Carrega o tema salvo do localStorage ou usa a preferência do sistema\r\n   * @private\r\n   */\r\n  loadSavedTheme() {\r\n    try {\r\n      const savedTheme = localStorage.getItem(appConfig.themeStorageKey);\r\n      \r\n      if (savedTheme !== null) {\r\n        this.isDarkMode = savedTheme === 'dark';\r\n      } else {\r\n        // Usa a preferência do sistema se não há tema salvo\r\n        this.isDarkMode = this.mediaQuery.matches;\r\n      }\r\n    } catch (error) {\r\n      console.warn('Erro ao carregar tema do localStorage:', error);\r\n      this.isDarkMode = this.mediaQuery.matches;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configura os event listeners\r\n   * @private\r\n   */\r\n  setupEventListeners() {\r\n    const themeToggle = this.domCache.get('themeToggle');\r\n    \r\n    DOMUtils.safeAddEventListener(themeToggle, 'click', () => {\r\n      this.toggleTheme();\r\n    });\r\n\r\n    // Adiciona suporte para tecla Enter no botão de tema\r\n    DOMUtils.safeAddEventListener(themeToggle, 'keydown', (event) => {\r\n      if (event.key === 'Enter' || event.key === ' ') {\r\n        event.preventDefault();\r\n        this.toggleTheme();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Configura listener para mudanças na preferência do sistema\r\n   * @private\r\n   */\r\n  setupMediaQueryListener() {\r\n    this.mediaQuery.addEventListener('change', (e) => {\r\n      // Só aplica a preferência do sistema se não há tema salvo manualmente\r\n      const savedTheme = localStorage.getItem(appConfig.themeStorageKey);\r\n      if (savedTheme === null) {\r\n        this.isDarkMode = e.matches;\r\n        this.applyTheme(this.isDarkMode);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Alterna entre tema claro e escuro\r\n   */\r\n  toggleTheme() {\r\n    this.isDarkMode = !this.isDarkMode;\r\n    this.applyTheme(this.isDarkMode);\r\n    this.saveTheme();\r\n  }\r\n\r\n  /**\r\n   * Aplica o tema especificado\r\n   * @param {boolean} isDark - Se deve aplicar o tema escuro\r\n   */\r\n  applyTheme(isDark) {\r\n    const body = document.body;\r\n    const themeIcon = this.domCache.get('themeIcon');\r\n    const themeToggle = this.domCache.get('themeToggle');\r\n\r\n    if (isDark) {\r\n      DOMUtils.safeAddClass(body, appConfig.darkModeClass);\r\n      DOMUtils.safeSetText(themeIcon, themeConfig.darkIcon);\r\n      DOMUtils.safeSetAttribute(themeToggle, 'aria-label', themeConfig.darkLabel);\r\n    } else {\r\n      DOMUtils.safeRemoveClass(body, appConfig.darkModeClass);\r\n      DOMUtils.safeSetText(themeIcon, themeConfig.lightIcon);\r\n      DOMUtils.safeSetAttribute(themeToggle, 'aria-label', themeConfig.lightLabel);\r\n    }\r\n\r\n    // Dispara evento customizado para outros módulos que possam precisar reagir\r\n    this.dispatchThemeChangeEvent(isDark);\r\n  }\r\n\r\n  /**\r\n   * Salva a preferência de tema no localStorage\r\n   * @private\r\n   */\r\n  saveTheme() {\r\n    try {\r\n      localStorage.setItem(\r\n        appConfig.themeStorageKey, \r\n        this.isDarkMode ? 'dark' : 'light'\r\n      );\r\n    } catch (error) {\r\n      console.warn('Erro ao salvar tema no localStorage:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispara evento customizado de mudança de tema\r\n   * @param {boolean} isDark - Se o tema atual é escuro\r\n   * @private\r\n   */\r\n  dispatchThemeChangeEvent(isDark) {\r\n    const event = new CustomEvent('themeChanged', {\r\n      detail: { isDarkMode: isDark }\r\n    });\r\n    document.dispatchEvent(event);\r\n  }\r\n\r\n  /**\r\n   * Obtém o tema atual\r\n   * @returns {string} 'dark' ou 'light'\r\n   */\r\n  getCurrentTheme() {\r\n    return this.isDarkMode ? 'dark' : 'light';\r\n  }\r\n\r\n  /**\r\n   * Define o tema programaticamente\r\n   * @param {string} theme - 'dark' ou 'light'\r\n   */\r\n  setTheme(theme) {\r\n    if (theme !== 'dark' && theme !== 'light') {\r\n      console.warn('Tema inválido. Use \"dark\" ou \"light\".');\r\n      return;\r\n    }\r\n\r\n    this.isDarkMode = theme === 'dark';\r\n    this.applyTheme(this.isDarkMode);\r\n    this.saveTheme();\r\n  }\r\n\r\n  /**\r\n   * Reseta o tema para o padrão do sistema\r\n   */\r\n  resetTheme() {\r\n    try {\r\n      localStorage.removeItem(appConfig.themeStorageKey);\r\n      this.isDarkMode = this.mediaQuery.matches;\r\n      this.applyTheme(this.isDarkMode);\r\n    } catch (error) {\r\n      console.warn('Erro ao resetar tema:', error);\r\n    }\r\n  }\r\n  /**\r\n   * Limpa recursos e para listeners\r\n   */\r\n  destroy() {\r\n    // Método para limpeza de recursos se necessário\r\n    console.log('ThemeManager destruído');\r\n  }\r\n}\r\n","/**\r\n * @fileoverview Renderização da escala de limpeza\r\n */\r\n\r\nimport { rooms } from './data.js';\r\nimport { formatDate, isToday } from './dateUtils.js';\r\n\r\n/**\r\n * Renderizador da escala de limpeza\r\n */\r\nexport class ScheduleRenderer {\r\n  /**\r\n   * @param {Object} domCache - Cache de elementos DOM\r\n   */\r\n  constructor(domCache) {\r\n    this.domCache = domCache;\r\n  }\r\n\r\n  /**\r\n   * Renderiza toda a escala de limpeza\r\n   * @param {Object} cycleData - Dados calculados dos ciclos\r\n   * @param {Object} scheduleData - Dados da escala\r\n   */\r\n  renderSchedule(cycleData, scheduleData) {\r\n    const container = this.domCache.get('scheduleContainer');\r\n    \r\n    if (!container) {\r\n      console.error('Container da escala não encontrado');\r\n      return;\r\n    }\r\n\r\n    // Limpa o container\r\n    this.clearElement(container);\r\n\r\n    try {\r\n      // Cria as colunas para cada dia\r\n      const mondayColumn = this.createScheduleColumn(\r\n        'monday',\r\n        'Segunda-feira',\r\n        scheduleData.monday?.[cycleData.mondayCycleIndex],\r\n        cycleData.mondayDate\r\n      );\r\n\r\n      const wednesdayColumn = this.createScheduleColumn(\r\n        'wednesday',\r\n        'Quarta-feira',\r\n        scheduleData.wednesday?.[cycleData.wednesdayCycleIndex],\r\n        cycleData.wednesdayDate\r\n      );\r\n\r\n      const fridayColumn = this.createScheduleColumn(\r\n        'friday',\r\n        'Sexta-feira',\r\n        scheduleData.friday?.[cycleData.fridayCycleIndex],\r\n        cycleData.fridayDate\r\n      );\r\n\r\n      // Adiciona as colunas ao container\r\n      container.appendChild(mondayColumn);\r\n      container.appendChild(wednesdayColumn);\r\n      container.appendChild(fridayColumn);\r\n\r\n      // Destaca o dia atual\r\n      this.highlightCurrentDay(cycleData);\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao renderizar escala:', error);\r\n      this.renderErrorMessage(container);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cria uma coluna da escala\r\n   * @param {string} id - ID da coluna\r\n   * @param {string} dayName - Nome do dia\r\n   * @param {import('../types/index.js').DailyScheduleItem} schedule - Escala do dia\r\n   * @param {Date} cleaningDate - Data da limpeza\r\n   * @returns {HTMLElement} Elemento da coluna\r\n   */\r\n  createScheduleColumn(id, dayName, schedule, cleaningDate) {\r\n    if (!schedule) {\r\n      console.warn(`Escala não encontrada para ${dayName}`);\r\n      return this.createEmptyColumn(id, dayName, cleaningDate);\r\n    }\r\n\r\n    const column = this.createElement('div', {\r\n      id,\r\n      className: 'column',\r\n      attributes: {\r\n        'role': 'region',\r\n        'aria-labelledby': `${id}-header`\r\n      }\r\n    });\r\n\r\n    // Cabeçalho da coluna\r\n    const header = this.createColumnHeader(id, dayName, cleaningDate);\r\n    column.appendChild(header);\r\n\r\n    // Lista de cômodos\r\n    const roomsList = this.createElement('div', {\r\n      className: 'rooms-list',\r\n      attributes: {\r\n        'role': 'list',\r\n        'aria-label': `Responsáveis pela limpeza de ${dayName}`\r\n      }\r\n    });\r\n\r\n    rooms.forEach(room => {\r\n      const roomElement = this.createRoomElement(room, schedule);\r\n      roomsList.appendChild(roomElement);\r\n    });\r\n\r\n    column.appendChild(roomsList);\r\n    return column;\r\n  }\r\n\r\n  /**\r\n   * Cria o cabeçalho de uma coluna\r\n   * @param {string} id - ID da coluna\r\n   * @param {string} dayName - Nome do dia\r\n   * @param {Date} date - Data\r\n   * @returns {HTMLElement} Elemento do cabeçalho\r\n   */\r\n  createColumnHeader(id, dayName, date) {\r\n    const header = this.createElement('header', {\r\n      className: 'column-header'\r\n    });\r\n\r\n    const title = this.createElement('h3', {\r\n      textContent: dayName,\r\n      id: `${id}-header`,\r\n      className: 'day-title'\r\n    });\r\n\r\n    const dateSpan = this.createElement('span', {\r\n      textContent: formatDate(date),\r\n      className: 'date-display',\r\n      attributes: {\r\n        'aria-label': `Data: ${formatDate(date)}`\r\n      }\r\n    });\r\n\r\n    header.appendChild(title);\r\n    header.appendChild(dateSpan);\r\n    return header;\r\n  }\r\n\r\n  /**\r\n   * Cria um elemento de cômodo\r\n   * @param {import('../types/index.js').Room} room - Dados do cômodo\r\n   * @param {import('../types/index.js').DailyScheduleItem} schedule - Escala do dia\r\n   * @returns {HTMLElement} Elemento do cômodo\r\n   */\r\n  createRoomElement(room, schedule) {\r\n    const responsible = schedule[room.key] || 'Não definido';\r\n    \r\n    const roomElement = this.createElement('div', {\r\n      className: 'room',\r\n      attributes: {\r\n        'role': 'listitem',\r\n        'aria-label': `${room.label}: ${responsible}`\r\n      }\r\n    });\r\n\r\n    const roomName = this.createElement('span', {\r\n      className: 'room-name',\r\n      textContent: room.label,\r\n      attributes: {\r\n        'aria-hidden': 'true'\r\n      }\r\n    });\r\n\r\n    const responsibleSpan = this.createElement('span', {\r\n      className: 'responsible',\r\n      textContent: responsible,\r\n      attributes: {\r\n        'title': `Responsável: ${responsible}`\r\n      }\r\n    });\r\n\r\n    roomElement.appendChild(roomName);\r\n    roomElement.appendChild(responsibleSpan);\r\n    return roomElement;\r\n  }\r\n\r\n  /**\r\n   * Cria uma coluna vazia para casos de erro\r\n   * @param {string} id - ID da coluna\r\n   * @param {string} dayName - Nome do dia\r\n   * @param {Date} date - Data\r\n   * @returns {HTMLElement} Elemento da coluna vazia\r\n   */\r\n  createEmptyColumn(id, dayName, date) {\r\n    const column = this.createElement('div', {\r\n      id,\r\n      className: 'column column-empty'\r\n    });\r\n\r\n    const header = this.createColumnHeader(id, dayName, date);\r\n    column.appendChild(header);\r\n\r\n    const message = this.createElement('p', {\r\n      textContent: 'Escala não disponível para este dia',\r\n      className: 'empty-message'\r\n    });\r\n\r\n    column.appendChild(message);\r\n    return column;\r\n  }\r\n\r\n  /**\r\n   * Destaca o dia atual\r\n   * @param {import('../types/index.js').CycleCalculation} cycleData - Dados dos ciclos\r\n   */\r\n  highlightCurrentDay(cycleData) {\r\n    const today = new Date();\r\n    const todayWeekDay = today.getDay();\r\n\r\n    // Remove destaques anteriores\r\n    document.querySelectorAll('.column.current-day').forEach(col => {\r\n      col.classList.remove('current-day');\r\n    });\r\n\r\n    // Destaca o dia atual\r\n    if (todayWeekDay === 1 && isToday(cycleData.mondayDate)) {\r\n      document.getElementById('monday')?.classList.add('current-day');\r\n    } else if (todayWeekDay === 3 && isToday(cycleData.wednesdayDate)) {\r\n      document.getElementById('wednesday')?.classList.add('current-day');\r\n    } else if (todayWeekDay === 5 && isToday(cycleData.fridayDate)) {\r\n      document.getElementById('friday')?.classList.add('current-day');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renderiza uma mensagem de erro\r\n   * @param {HTMLElement} container - Container para a mensagem\r\n   */\r\n  renderErrorMessage(container) {\r\n    this.clearElement(container);\r\n    \r\n    const errorElement = this.createElement('div', {\r\n      className: 'error-message',\r\n      innerHTML: `\r\n        <h3>❌ Erro ao carregar escala</h3>\r\n        <p>Não foi possível carregar a escala de limpeza. Tente recarregar a página.</p>\r\n        <button onclick=\"location.reload()\" class=\"reload-button\">\r\n          🔄 Recarregar página\r\n        </button>\r\n      `\r\n    });\r\n\r\n    container.appendChild(errorElement);\r\n  }\r\n\r\n  /**\r\n   * Atualiza apenas o destaque do dia atual sem re-renderizar toda a escala\r\n   */\r\n  updateCurrentDayHighlight() {\r\n    // Busca os dados atuais do cache/estado se disponível\r\n    // Por enquanto, apenas remove e não re-adiciona até ter os dados corretos\r\n    document.querySelectorAll('.column.current-day').forEach(col => {\r\n      col.classList.remove('current-day');\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Utilitário para criar elementos DOM\r\n   * @param {string} tagName - Nome da tag\r\n   * @param {Object} options - Opções do elemento\r\n   * @returns {HTMLElement} Elemento criado\r\n   */\r\n  createElement(tagName, options = {}) {\r\n    const element = document.createElement(tagName);\r\n\r\n    if (options.id) element.id = options.id;\r\n    if (options.className) element.className = options.className;\r\n    if (options.textContent) element.textContent = options.textContent;\r\n    if (options.innerHTML) element.innerHTML = options.innerHTML;\r\n\r\n    if (options.attributes) {\r\n      Object.entries(options.attributes).forEach(([key, value]) => {\r\n        element.setAttribute(key, value);\r\n      });\r\n    }\r\n\r\n    return element;\r\n  }\r\n\r\n  /**\r\n   * Limpa todos os filhos de um elemento\r\n   * @param {HTMLElement} element - Elemento a ser limpo\r\n   */\r\n  clearElement(element) {\r\n    if (element && element.children) {\r\n      while (element.firstChild) {\r\n        element.removeChild(element.firstChild);\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @fileoverview Gerenciamento da escala da máquina de lavar\r\n */\r\n\r\nimport { washingSchedule } from './data.js';\r\nimport { DOMUtils } from './domUtils.js';\r\n\r\n/**\r\n * Gerenciador da escala da máquina de lavar\r\n */\r\nexport class WashingScheduleManager {\r\n  constructor(domCache) {\r\n    this.domCache = domCache;\r\n  }\r\n\r\n  /**\r\n   * Inicializa a escala da máquina de lavar\r\n   */\r\n  init() {\r\n    this.highlightCurrentWashingDay();\r\n    this.setupAutoUpdate();\r\n  }\r\n\r\n  /**\r\n   * Destaca o dia atual na tabela da máquina de lavar\r\n   */\r\n  highlightCurrentWashingDay() {\r\n    const tableBody = this.domCache.get('washingTableBody');\r\n    \r\n    if (!tableBody) {\r\n      console.warn('Tabela da máquina de lavar não encontrada');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Remove destaque anterior\r\n      const previousHighlighted = tableBody.querySelectorAll('tr.current-day');\r\n      previousHighlighted.forEach(row => {\r\n        DOMUtils.safeRemoveClass(row, 'current-day');\r\n      });\r\n\r\n      // Obtém o dia atual\r\n      const today = new Date();\r\n      const currentDayIndex = today.getDay();\r\n\r\n      // Encontra e destaca a linha correspondente ao dia atual\r\n      const rows = tableBody.querySelectorAll('tr');\r\n      \r\n      if (rows[currentDayIndex]) {\r\n        DOMUtils.safeAddClass(rows[currentDayIndex], 'current-day');\r\n        \r\n        // Adiciona atributo ARIA para acessibilidade\r\n        DOMUtils.safeSetAttribute(\r\n          rows[currentDayIndex], \r\n          'aria-current', \r\n          'date'\r\n        );\r\n        \r\n        // Remove atributo ARIA das outras linhas\r\n        rows.forEach((row, index) => {\r\n          if (index !== currentDayIndex) {\r\n            row.removeAttribute('aria-current');\r\n          }\r\n        });\r\n\r\n        // Rola suavemente para a linha atual se ela estiver fora da visualização\r\n        this.scrollToCurrentDay(rows[currentDayIndex]);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao destacar dia atual na máquina de lavar:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rola suavemente para o dia atual se necessário\r\n   * @param {HTMLElement} currentRow - Linha do dia atual\r\n   * @private\r\n   */\r\n  scrollToCurrentDay(currentRow) {\r\n    if (!currentRow) return;\r\n\r\n    try {\r\n      // Verifica se a linha está visível na viewport\r\n      const rect = currentRow.getBoundingClientRect();\r\n      const isVisible = rect.top >= 0 && \r\n                       rect.bottom <= window.innerHeight;\r\n\r\n      if (!isVisible) {\r\n        currentRow.scrollIntoView({\r\n          behavior: 'smooth',\r\n          block: 'center'\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.warn('Erro ao rolar para o dia atual:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configura atualização automática da escala\r\n   * @private\r\n   */\r\n  setupAutoUpdate() {\r\n    // Atualiza o destaque a cada minuto para capturar mudanças de dia\r\n    setInterval(() => {\r\n      this.highlightCurrentWashingDay();\r\n    }, 60000); // 1 minuto\r\n\r\n    // Atualiza quando a página volta ao foco (usuário retorna à aba)\r\n    DOMUtils.safeAddEventListener(document, 'visibilitychange', () => {\r\n      if (!document.hidden) {\r\n        this.highlightCurrentWashingDay();\r\n      }\r\n    });\r\n\r\n    // Atualiza quando a janela recebe foco\r\n    DOMUtils.safeAddEventListener(window, 'focus', () => {\r\n      this.highlightCurrentWashingDay();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Obtém informações sobre quem usa a máquina hoje\r\n   * @returns {Object|null} Informações do dia atual ou null se não encontrado\r\n   */\r\n  getTodayWashingInfo() {\r\n    const today = new Date();\r\n    const currentDayIndex = today.getDay();\r\n    \r\n    return washingSchedule.find(day => day.dayIndex === currentDayIndex) || null;\r\n  }\r\n\r\n  /**\r\n   * Obtém informações sobre quem usa a máquina em um dia específico\r\n   * @param {number} dayIndex - Índice do dia (0 = domingo)\r\n   * @returns {Object|null} Informações do dia ou null se não encontrado\r\n   */\r\n  getWashingInfoForDay(dayIndex) {\r\n    if (dayIndex < 0 || dayIndex > 6) {\r\n      console.warn('Índice de dia inválido. Use 0-6 (domingo-sábado)');\r\n      return null;\r\n    }\r\n    \r\n    return washingSchedule.find(day => day.dayIndex === dayIndex) || null;\r\n  }\r\n\r\n  /**\r\n   * Obtém a escala completa da semana\r\n   * @returns {Array} Array com todos os dias da semana\r\n   */\r\n  getFullWeekSchedule() {\r\n    return [...washingSchedule];\r\n  }\r\n\r\n  /**\r\n   * Verifica se um usuário específico usa a máquina hoje\r\n   * @param {string} userName - Nome do usuário\r\n   * @returns {boolean} True se o usuário usa a máquina hoje\r\n   */\r\n  isUserScheduledToday(userName) {\r\n    const todayInfo = this.getTodayWashingInfo();\r\n    \r\n    if (!todayInfo) return false;\r\n    \r\n    return todayInfo.users.toLowerCase().includes(userName.toLowerCase());\r\n  }\r\n\r\n  /**\r\n   * Encontra em quais dias um usuário específico usa a máquina\r\n   * @param {string} userName - Nome do usuário\r\n   * @returns {Array} Array com os dias em que o usuário usa a máquina\r\n   */\r\n  findUserDays(userName) {\r\n    return washingSchedule.filter(day => \r\n      day.users.toLowerCase().includes(userName.toLowerCase())\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Renderiza a tabela da máquina de lavar (caso precise ser recriada)\r\n   */\r\n  renderWashingTable() {\r\n    const tableBody = this.domCache.get('washingTableBody');\r\n    \r\n    if (!tableBody) {\r\n      console.error('Container da tabela da máquina de lavar não encontrado');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Limpa a tabela\r\n      DOMUtils.clearElement(tableBody);\r\n\r\n      // Cria as linhas da tabela\r\n      washingSchedule.forEach((dayInfo, index) => {\r\n        const row = this.createWashingTableRow(dayInfo, index);\r\n        tableBody.appendChild(row);\r\n      });\r\n\r\n      // Destaca o dia atual\r\n      this.highlightCurrentWashingDay();\r\n\r\n    } catch (error) {\r\n      console.error('Erro ao renderizar tabela da máquina de lavar:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cria uma linha da tabela da máquina de lavar\r\n   * @param {Object} dayInfo - Informações do dia\r\n   * @param {number} index - Índice da linha\r\n   * @returns {HTMLElement} Elemento da linha\r\n   * @private\r\n   */\r\n  createWashingTableRow(dayInfo, index) {\r\n    const row = DOMUtils.createElement('tr', {\r\n      attributes: {\r\n        'data-day-index': dayInfo.dayIndex.toString()\r\n      }\r\n    });\r\n\r\n    const dayCell = DOMUtils.createElement('td', {\r\n      textContent: dayInfo.day\r\n    });\r\n\r\n    const usersCell = DOMUtils.createElement('td', {\r\n      textContent: dayInfo.users\r\n    });\r\n\r\n    row.appendChild(dayCell);\r\n    row.appendChild(usersCell);\r\n\r\n    return row;\r\n  }\r\n\r\n  /**\r\n   * Força atualização do destaque do dia atual\r\n   */\r\n  forceUpdate() {\r\n    this.highlightCurrentWashingDay();\r\n  }\r\n\r\n  /**\r\n   * Limpa recursos e para timers\r\n   */\r\n  destroy() {\r\n    if (this.updateInterval) {\r\n      clearInterval(this.updateInterval);\r\n      this.updateInterval = null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @fileoverview Aplicação principal do sistema de escalas da República Tabajara\r\n */\r\n\r\nimport { scheduleData, appConfig } from './modules/data.js';\r\nimport { calculateWeekCycles } from './modules/dateUtils.js';\r\nimport { DOMCache, DOMUtils } from './modules/domUtils.js';\r\nimport { ThemeManager } from './modules/themeManager.js';\r\nimport { ScheduleRenderer } from './modules/scheduleRenderer.js';\r\nimport { WashingScheduleManager } from './modules/washingScheduleManager.js';\r\n\r\n/**\r\n * Classe principal da aplicação\r\n */\r\nclass EscalasTabajaraApp {\r\n  constructor() {\r\n    this.domCache = null;\r\n    this.themeManager = null;\r\n    this.scheduleRenderer = null;\r\n    this.washingManager = null;\r\n    this.isInitialized = false;\r\n    this.initTime = Date.now();\r\n    this.errorCount = 0;\r\n    this.lastUpdate = null;\r\n    this.lastError = null;\r\n  }\r\n\r\n  /**\r\n   * Inicializa a aplicação\r\n   */\r\n  async init() {\r\n    try {\r\n      console.log('🧹 Inicializando Sistema de Escalas da República Tabajara...');\r\n      \r\n      // Inicializa o cache DOM\r\n      this.domCache = new DOMCache();\r\n      \r\n      // Valida elementos essenciais\r\n      if (!this.domCache.validateEssentialElements()) {\r\n        throw new Error('Elementos essenciais do DOM não encontrados');\r\n      }\r\n\r\n      // Inicializa os módulos\r\n      this.themeManager = new ThemeManager(this.domCache);\r\n      this.scheduleRenderer = new ScheduleRenderer(this.domCache);\r\n      this.washingManager = new WashingScheduleManager(this.domCache);\r\n\r\n      // Configura eventos globais\r\n      this.setupGlobalEventListeners();\r\n\r\n      // Renderiza a escala inicial\r\n      await this.renderCleaningSchedule();\r\n\r\n      // Inicializa a escala da máquina de lavar\r\n      this.washingManager.init();\r\n\r\n      // Atualiza o ano no rodapé\r\n      this.updateFooterYear();\r\n\r\n      this.isInitialized = true;\r\n      console.log('✅ Sistema inicializado com sucesso!');\r\n\r\n    } catch (error) {\r\n      console.error('❌ Erro ao inicializar aplicação:', error);\r\n      this.handleInitializationError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renderiza a escala de limpeza\r\n   */\r\n  async renderCleaningSchedule() {\r\n    try {\r\n      const today = new Date();\r\n      const cycleData = calculateWeekCycles(today, appConfig.referenceDate, scheduleData);\r\n      \r\n      if (this.scheduleRenderer) {\r\n        this.scheduleRenderer.renderSchedule(cycleData, scheduleData);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Erro ao renderizar escala de limpeza:', error);\r\n      this.handleScheduleError(error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Configura listeners de eventos globais\r\n   */\r\n  setupGlobalEventListeners() {\r\n    // Listener para mudanças de visibilidade da página\r\n    document.addEventListener('visibilitychange', () => {\r\n      if (!document.hidden && this.isInitialized) {\r\n        this.handleVisibilityChange();\r\n      }\r\n    });\r\n\r\n    // Listener para erros não capturados\r\n    window.addEventListener('error', (event) => {\r\n      this.handleGlobalError(event.error);\r\n    });\r\n\r\n    // Listener para promises rejeitadas\r\n    window.addEventListener('unhandledrejection', (event) => {\r\n      this.handleGlobalError(event.reason);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Atualiza o ano no rodapé\r\n   */\r\n  updateFooterYear() {\r\n    const footerYear = this.domCache?.get('footerYear');\r\n    if (footerYear) {\r\n      footerYear.textContent = new Date().getFullYear().toString();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manipula mudanças de visibilidade da página\r\n   */\r\n  handleVisibilityChange() {\r\n    // Quando a página volta a ficar visível, atualiza os dados\r\n    setTimeout(() => {\r\n      this.renderCleaningSchedule();\r\n      if (this.washingManager) {\r\n        this.washingManager.highlightCurrentWashingDay();\r\n      }\r\n    }, 100);\r\n  }\r\n\r\n  /**\r\n   * Manipula erros de inicialização\r\n   * @param {Error} error - Erro ocorrido\r\n   */\r\n  handleInitializationError(error) {\r\n    const container = document.getElementById('cleaningSchedule');\r\n    if (container) {\r\n      container.innerHTML = `\r\n        <div class=\"error-message\">\r\n          <h3>❌ Erro de Inicialização</h3>\r\n          <p>Não foi possível inicializar o sistema de escalas.</p>\r\n          <p>Erro: ${error.message}</p>\r\n          <button onclick=\"location.reload()\" class=\"reload-button\">\r\n            🔄 Recarregar página\r\n          </button>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manipula erros na renderização da escala\r\n   * @param {Error} error - Erro ocorrido\r\n   */\r\n  handleScheduleError(error) {\r\n    console.error('Erro na escala:', error);\r\n    \r\n    const container = this.domCache?.get('scheduleContainer');\r\n    if (container) {\r\n      container.innerHTML = `\r\n        <div class=\"error-message\">\r\n          <h3>❌ Erro na Escala</h3>\r\n          <p>Não foi possível carregar a escala de limpeza.</p>\r\n          <button onclick=\"location.reload()\" class=\"reload-button\">\r\n            🔄 Tentar novamente\r\n          </button>\r\n        </div>\r\n      `;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manipula erros globais não capturados\r\n   * @param {unknown} error - Erro ocorrido\r\n   */\r\n  handleGlobalError(error) {\r\n    console.error('Erro global capturado:', error);\r\n    this.errorCount++;\r\n    \r\n    // Evita spam de logs para o mesmo erro\r\n    const errorMessage = error instanceof Error ? error.message : String(error);\r\n    if (this.lastError && this.lastError === errorMessage) {\r\n      return;\r\n    }\r\n    \r\n    this.lastError = errorMessage;\r\n  }\r\n\r\n  /**\r\n   * Obtém estatísticas da aplicação\r\n   * @returns {Object} Estatísticas de uso\r\n   */\r\n  getAppStats() {\r\n    return {\r\n      isInitialized: this.isInitialized,\r\n      uptime: this.isInitialized ? Date.now() - this.initTime : 0,\r\n      theme: this.themeManager?.getCurrentTheme() || 'unknown',\r\n      errors: this.errorCount || 0,\r\n      lastUpdate: this.lastUpdate || null\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Força atualização de todos os componentes\r\n   */\r\n  forceUpdate() {\r\n    if (!this.isInitialized) {\r\n      console.warn('Aplicação não está inicializada');\r\n      return;\r\n    }\r\n\r\n    console.log('🔄 Forçando atualização...');\r\n    \r\n    this.renderCleaningSchedule();\r\n    if (this.washingManager) {\r\n      this.washingManager.highlightCurrentWashingDay();\r\n    }\r\n    this.updateFooterYear();\r\n    \r\n    this.lastUpdate = new Date();\r\n    console.log('✅ Atualização concluída');\r\n  }\r\n\r\n  /**\r\n   * Limpa recursos e para timers\r\n   */\r\n  destroy() {\r\n    this.isInitialized = false;\r\n    console.log('🧹 Aplicação destruída');\r\n  }\r\n}\r\n\r\n// Instância global da aplicação\r\nlet app = null;\r\n\r\n/**\r\n * Inicializa a aplicação quando o DOM estiver pronto\r\n */\r\nconst initializeApp = async () => {\r\n  try {\r\n    app = new EscalasTabajaraApp();\r\n    await app.init();\r\n    \r\n    // Expõe a instância globalmente para debugging\r\n    if (typeof window !== 'undefined') {\r\n      window.EscalasApp = app;\r\n    }\r\n    \r\n  } catch (error) {\r\n    console.error('Falha crítica na inicialização:', error);\r\n  }\r\n};\r\n\r\n/**\r\n * Inicialização baseada no estado do documento\r\n */\r\nif (document.readyState === 'loading') {\r\n  document.addEventListener('DOMContentLoaded', initializeApp);\r\n} else {\r\n  // DOM já está carregado\r\n  initializeApp();\r\n}\r\n\r\n// Exporta a função de inicialização para uso em testes\r\nexport { initializeApp, EscalasTabajaraApp };\r\n"],"names":["scheduleData","monday","cozinha","banhBaixo","banhSuite","sala","lavabo","wednesday","friday","rooms","label","key","washingSchedule","day","users","dayIndex","appConfig","referenceDate","Date","themeStorageKey","darkModeClass","themeConfig","formatDate","date","isNaN","getTime","Error","toLocaleDateString","month","calculateWeekCycles","currentDate","referenceDate2","getDay","setDate","getDate","mondayDate","currentDay","diffToMonday","setHours","getMondayDate","weekDiff","Math","max","date1","date2","startOfDate1","getFullYear","getMonth","startOfDate2","floor","getWeekDifference","mondayCycleIndex","_a","length","wednesdayCycleIndex","_b","fridayCycleIndex","_c","wednesdayDate","fridayDate","isToday","today","DOMCache","constructor","this","cache","Map","initializeCache","selectors","scheduleContainer","washingTableBody","themeToggle","themeIcon","footerYear","selector","Object","entries","set","document","querySelector","get","element","validateEssentialElements","every","refresh","clear","DOMUtils","createElement","tag","options","classes","classList","add","attributes","value","setAttribute","textContent","innerHTML","clearElement","firstChild","removeChild","safeAddClass","className","safeRemoveClass","remove","hasClass","contains","safeSetAttribute","attribute","safeSetText","text","safeAddEventListener","event","handler","addEventListener","ThemeManager","domCache","isDarkMode","mediaQuery","window","matchMedia","init","loadSavedTheme","setupEventListeners","setupMediaQueryListener","applyTheme","savedTheme","localStorage","getItem","matches","error","console","warn","toggleTheme","preventDefault","e","saveTheme","isDark","body","dispatchThemeChangeEvent","setItem","CustomEvent","detail","dispatchEvent","getCurrentTheme","setTheme","theme","resetTheme","removeItem","destroy","log","ScheduleRenderer","renderSchedule","cycleData","container","mondayColumn","createScheduleColumn","wednesdayColumn","fridayColumn","appendChild","highlightCurrentDay","renderErrorMessage","id","dayName","schedule","cleaningDate","createEmptyColumn","column","role","header","createColumnHeader","roomsList","forEach","room","roomElement","createRoomElement","title","dateSpan","responsible","roomName","responsibleSpan","message","todayWeekDay","querySelectorAll","col","getElementById","errorElement","updateCurrentDayHighlight","tagName","children","WashingScheduleManager","highlightCurrentWashingDay","setupAutoUpdate","tableBody","row","currentDayIndex","rows","index","removeAttribute","scrollToCurrentDay","currentRow","rect","getBoundingClientRect","top","bottom","innerHeight","scrollIntoView","behavior","block","setInterval","hidden","getTodayWashingInfo","find","getWashingInfoForDay","getFullWeekSchedule","isUserScheduledToday","userName","todayInfo","toLowerCase","includes","findUserDays","filter","renderWashingTable","dayInfo","createWashingTableRow","toString","dayCell","usersCell","forceUpdate","updateInterval","clearInterval","EscalasTabajaraApp","themeManager","scheduleRenderer","washingManager","isInitialized","initTime","now","errorCount","lastUpdate","lastError","setupGlobalEventListeners","renderCleaningSchedule","updateFooterYear","handleInitializationError","handleScheduleError","handleVisibilityChange","handleGlobalError","reason","setTimeout","errorMessage","String","getAppStats","uptime","errors","app","initializeApp","async","EscalasApp","readyState"],"mappings":"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"}